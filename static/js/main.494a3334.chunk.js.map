{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","GameStatus","gameover","init","suspended","playing","ManipulationPanel","onChange","Direction","left","icon","faArrowLeft","up","faArrowUp","down","faArrowDown","right","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","Object","freeze","DirectionKeyCodeMap","37","38","39","40","OppositeDirection","Delta","timer","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","nextFields","field","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.494a3334.chunk.js","sourcesContent":["const Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden';\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden';\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1);\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1);\n\n    return (\n        <div className=\"navigation\">\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Length: </span>\n                <div className=\"navigation-item-number-container\">\n                    <div className=\"num-board\">{length}</div>\n                </div>\n            </div>\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Difficulty: </span>\n                <div className=\"navigation-item-number-container\">\n                    <span className=\"num-board\">{difficulty}</span>\n                    <div className=\"difficulty-button-container\">\n                        <div\n                            className={`difficulty-button difficulty-up ${upVisibility}`}\n                            onClick={onUpDifficulty}\n                        ></div>\n                        <div\n                            className={`difficulty-button difficulty-down ${downVisibility}`}\n                            onClick={onDownDifficulty}\n                        ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Navigation;","const Field = ({ fields }) => {\n    return (\n        <div className=\"field\">\n            {\n                fields.map((row) => {\n                    return row.map((column) => {\n                        return <div className={`dots ${column}`}></div>\n                    })\n                })\n            }\n        </div>\n    );\n};\n\nexport default Field;","import { GameStatus } from \"../App\";\n\nconst Button = ({ status, onStart, onStop, onRestart }) => {\n    return (\n        <div className=\"button\">\n            {status === GameStatus.gameover && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button>}\n            {status === GameStatus.init && <button className=\"btn btn-init\" onClick={onStart}>start</button>}\n            {status === GameStatus.suspended && <button className=\"btn btn-suspended\" onClick={onStart}>start</button>}\n            {status === GameStatus.playing && <button className=\"btn btn-playing\" onClick={onStop}>stop</button>}\n        </div>\n    );\n};\n\nexport default Button;","import { Direction } from \"../App\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faArrowLeft,\n    faArrowUp,\n    faArrowDown,\n    faArrowRight\n} from '@fortawesome/free-solid-svg-icons';\n\nconst ManipulationPanel = ({ onChange }) => {\n\n    const onUp = () => onChange(Direction.up);\n    const onRight = () => onChange(Direction.right);\n    const onLeft = () => onChange(Direction.left);\n    const onDown = () => onChange(Direction.down);\n\n    return (\n        <div className=\"manipulation-panel\">\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n                <FontAwesomeIcon icon={faArrowLeft} />\n            </button>\n            <div>\n                <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n                    <FontAwesomeIcon icon={faArrowUp} />\n                </button>\n                <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n                    <FontAwesomeIcon icon={faArrowDown} />\n                </button>\n            </div>\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n                <FontAwesomeIcon icon={faArrowRight} />\n            </button>\n        </div>\n    );\n};\n\nexport default ManipulationPanel;","export const getFoodPosition = (fieldSize, excludes) => {\n    while (true) {\n        const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n        const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n        // 蛇の体の座標 配列と一致するとこには餌を置かない\n        const conflict = excludes.some(item => item.x === x && item.y === y);\n\n        if (!conflict) {\n            return { x, y };\n        }\n    }\n}\n\n\nexport const initFields = (fieldSize, snake) => {\n    const fields = [];\n    for (let i = 0; i < fieldSize; i++) {\n        const cols = new Array(fieldSize).fill('');\n        fields.push(cols);\n\n    }\n    fields[snake.x][snake.y] = 'snake'\n\n    // テスト(自分を食べる)\n    // fields = fields.map((field, index_row) => field.map((item, index_col) => {\n    //     if ((index_row >= 17 && index_row <= (17 + 15)) && index_col == 17) {\n    //         return 'snake'\n    //     } else {\n    //         return item;\n    //     }\n    // }))\n\n    const food = getFoodPosition(fieldSize, [snake]);\n    fields[food.y][food.x] = 'food';\n\n    return fields;\n}","import { useCallback, useEffect, useState } from 'react';\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport { initFields, getFoodPosition } from './utils'\n\nconst initialPosition = { x: 17, y: 17 };\nconst initialValues = initFields(35, initialPosition);\nconst defaultInterval = 100;\nconst defaultDifficulty = 3;\n\nconst Difficulty = [1000, 500, 100, 50, 10];\n\n// ゲームの状態\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended', // 一時停止\n  gameover: 'gameover'\n});\n\n// 蛇の進行方向\nconst Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n});\n\n// キーコードと進行方向のマッピング\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down\n});\n\n// 反対方向\nconst OppositeDirection = Object.freeze({\n  up: Direction.down,\n  right: Direction.left,\n  left: Direction.right,\n  down: Direction.up\n});\n\n// 移動方向における座標の変化量\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 }\n});\n\n// let timer = undefined;\nlet timer = null;\n\nconst unsubscribe = () => {\n  if (!timer) {\n    return\n  }\n  clearInterval(timer);\n}\n\n// 衝突の判定 true:衝突\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n\n  return false;\n}\n\n// 自分(蛇)を食べてしまう場合 true:食べてしまう\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake';\n}\n\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues);\n  const [body, setBody] = useState([initialPosition]);\n  // // 自分を食べるテスト\n  // const [body, setBody] = useState(\n  //   new Array(15).fill('').map((_item, index) => ({ x: 17, y: 17 + index }))\n  // );\n  const [status, setStatus] = useState(GameStatus.init);\n  const [direction, setDirection] = useState(Direction.up);\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\n  const [tick, setTick] = useState(0);\n\n  useEffect(() => {\n    // setPosition(initialPosition);\n\n    // ゲームの中の時間を管理する\n    const interval = Difficulty[difficulty - 1];\n    timer = setInterval(() => {\n      // if (!position) { // useEffectの場合の考慮\n      //   return;\n      // }\n      // console.log(position)\n      setTick(tick => tick + 1);\n    }, interval);\n\n    // useEffectのリターンにするとコンポーネントが削除されるタイミングで実行される\n    return unsubscribe;\n  }, [difficulty]);\n\n  useEffect(() => {\n    // if (!body.length === 0 || status !== GameStatus.playing) {\n    if (status !== GameStatus.playing) {\n      return;\n    }\n\n    const canContinue = handleMoving();\n    if (!canContinue) {\n      unsubscribe();\n      setStatus(GameStatus.gameover);\n    }\n  }, [tick]);\n\n  const onStart = () => setStatus(GameStatus.playing);\n\n  const onStop = () => setStatus(GameStatus.suspended);\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval);\n    setDirection(Direction.up);\n    setStatus(GameStatus.init);\n    setBody([initialPosition]);\n    setFields(initFields(35, initialPosition));\n  }\n\n  // 進行方向の変更\n  const onChangeDirection = useCallback((newDirection) => {\n    // ゲームプレイだけ歩行が変えられる\n    if (status !== GameStatus.playing) {\n      return direction;\n    }\n    // 許容しない移動か（進行方向と真逆の移動とか）\n    if (OppositeDirection[direction] === newDirection) {\n      return;\n    }\n    setDirection(newDirection)\n  }, [direction, status]);\n\n  // 難易度の変更\n  const onChangeDifficulty = useCallback((difficulty) => {\n\n    // 初期状態（ゲームを始める前）以外では変更できない \n    if (status !== GameStatus.init) {\n      return;\n    }\n    if (difficulty < 1 || difficulty > Difficulty.length) {\n      return;\n    }\n    setDifficulty(difficulty);\n  }, [status, difficulty]);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n      onChangeDirection(newDirection);\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [onChangeDirection]);\n\n  // 蛇を動かし、描画する\n  const handleMoving = () => {\n    const { x, y } = body[0];\n    const delta = Delta[direction];\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    };\n\n    // 衝突判定と、自分(蛇)を食べる判定\n    if (isCollision(fields.length, newPosition)\n      || isEatingMyself(fields, newPosition)) {\n      return false;\n    }\n\n    // フィールド配列の再設定\n    const nextFields = fields.map(field => [...field]);\n\n    const newBody = [...body];\n\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      // 移動する、次のフィールドが餌でない場合\n      const removingTrack = newBody.pop(); // 最後の要素を取り出し削除\n      nextFields[removingTrack.y][removingTrack.x] = '';\n    } else {\n      // 餌の場合\n      const food = getFoodPosition(fields.length, [...newBody, newPosition]);\n      nextFields[food.y][food.x] = 'food';\n    }\n    nextFields[newPosition.y][newPosition.x] = 'snake';\n    newBody.unshift(newPosition); // 先頭に要素を追加する\n\n    // stateの更新と再レンダリング\n    setBody(newBody);\n    // setFields(fields);\n    setFields(nextFields);\n    return true;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStop={onStop}\n          onStart={onStart}\n          onRestart={onRestart}\n        />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\nexport {\n  GameStatus,\n  Direction\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}